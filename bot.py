import asyncio
import logging
from datetime import datetime
from typing import Optional

from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command, ChatMemberUpdatedFilter, KICKED, LEFT, MEMBER, ADMINISTRATOR, CREATOR
from aiogram.types import ChatMemberUpdated, Message
from aiogram.utils.keyboard import InlineKeyboardBuilder

from config import BOT_TOKEN, ADMIN_ID, REWARD_COEFFICIENT
from database import Database
from chat_analyzer import ChatAnalyzer
from admin_commands import AdminCommands

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log', encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
db = Database()
analyzer = ChatAnalyzer()
admin_commands = AdminCommands(bot, db, analyzer)

@dp.message(Command("start"))
async def start_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    try:
        user_id = message.from_user.id
        username = message.from_user.username
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await db.add_user(user_id, username)
        
        welcome_text = (
            "ü§ñ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Reward Bot!</b>\n\n"
            "–Ø –±–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —á–∞—Ç–æ–≤ –∏ –≤—ã–¥–∞—á–∏ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–π.\n\n"
            "<b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>\n"
            "‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –≤ —á–∞—Ç\n"
            "‚Ä¢ –Ø –±—É–¥—É –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
            "‚Ä¢ –ó–∞ –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ\n\n"
            "<b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
            "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
            "/help - –ü–æ–º–æ—â—å\n"
            "/my_rewards - –ú–æ–∏ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è\n\n"
            "–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã."
        )
        
        await message.answer(welcome_text, parse_mode="HTML")
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} ({username}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /start: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@dp.message(Command("help"))
async def help_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = (
        "üìñ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>\n\n"
        "<b>–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n"
        "‚Ä¢ –ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —á–∞—Ç–æ–≤\n"
        "‚Ä¢ –í—ã–¥–∞—á–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–π –∑–∞ –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã\n"
        "‚Ä¢ –ó–∞—â–∏—Ç–∞ –æ—Ç –Ω–∞–∫—Ä—É—Ç–∫–∏\n\n"
        "<b>–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ:</b>\n"
        "1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ —á–∞—Ç\n"
        "2. –£—á–∞—Å—Ç–Ω–∏–∫–∏ —á–∞—Ç–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º–∏\n"
        "3. –ß–µ–º –±–æ–ª—å—à–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Ç–µ–º –±–æ–ª—å—à–µ –Ω–∞–≥—Ä–∞–¥–∞\n\n"
        "<b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
        "/my_rewards - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è\n"
        "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
        "–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —á–∞—Ç–∞."
    )
    
    await message.answer(help_text, parse_mode="HTML")

@dp.message(Command("my_rewards"))
async def my_rewards_command(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        user_id = message.from_user.id
        rewards = await db.get_user_rewards(user_id)
        
        if not rewards:
            await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–π. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç!")
            return
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —Å—É–º–º—É
        total_amount = sum(reward['reward_amount'] for reward in rewards)
        
        text = f"üí∞ <b>–í–∞—à–∏ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è</b>\n\n"
        text += f"–û–±—â–∞—è —Å—É–º–º–∞: <b>{total_amount:.2f}</b>\n\n"
        
        for reward in rewards[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10
            date = datetime.fromisoformat(reward['reward_date']).strftime("%d.%m.%Y %H:%M")
            text += f"‚Ä¢ {reward['reward_amount']:.2f} - {reward['chat_title']}\n"
            text += f"  <i>{date}</i>\n\n"
        
        if len(rewards) > 10:
            text += f"... –∏ –µ—â–µ {len(rewards) - 10} –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–π"
        
        await message.answer(text, parse_mode="HTML")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–π: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.")

# –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
@dp.message(Command("stats"))
async def stats_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /stats - –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"""
    await admin_commands.stats_command(message)

@dp.message(Command("chats"))
async def chats_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /chats - —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤"""
    await admin_commands.chats_command(message)

@dp.message(Command("rewards"))
async def rewards_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /rewards - —Å–ø–∏—Å–æ–∫ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–π"""
    await admin_commands.rewards_command(message)

@dp.message(Command("analyze_chat"))
async def analyze_chat_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /analyze_chat - –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞"""
    await admin_commands.analyze_chat_command(message)

@dp.message(Command("user_rewards"))
async def user_rewards_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /user_rewards - –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    await admin_commands.user_rewards_command(message)

@dp.message(Command("admin_help"))
async def admin_help_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /admin_help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥–∞–º"""
    await admin_commands.help_admin_command(message)

@dp.chat_member(ChatMemberUpdatedFilter(member_status_changed=KICKED >> MEMBER))
async def bot_added_to_chat(event: ChatMemberUpdated):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –≤ —á–∞—Ç"""
    try:
        chat = event.chat
        new_member = event.new_chat_member
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞
        if new_member.user.id != bot.id:
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫—Ç–æ –¥–æ–±–∞–≤–∏–ª –±–æ—Ç–∞
        # –í Telegram API –Ω–µ—Ç –ø—Ä—è–º–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ —É–∑–Ω–∞—Ç—å, –∫—Ç–æ –¥–æ–±–∞–≤–∏–ª –±–æ—Ç–∞
        # –ü–æ—ç—Ç–æ–º—É –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–∞—Ç–∞ –∫–∞–∫ "–¥–æ–±–∞–≤–∏–≤—à–µ–≥–æ"
        admins = await bot.get_chat_administrators(chat.id)
        added_by_user = None
        
        for admin in admins:
            if admin.status in [ADMINISTRATOR, CREATOR]:
                added_by_user = admin.user
                break
        
        if not added_by_user:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫—Ç–æ –¥–æ–±–∞–≤–∏–ª –±–æ—Ç–∞ –≤ —á–∞—Ç {chat.id}")
            return
        
        # –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        chat_title = chat.title or f"–ß–∞—Ç {chat.id}"
        success = await db.add_chat(chat.id, chat_title, added_by_user.id)
        
        if success:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            welcome_text = (
                f"üëã <b>–ü—Ä–∏–≤–µ—Ç, {chat_title}!</b>\n\n"
                "–Ø Reward Bot - –±–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —á–∞—Ç–æ–≤.\n\n"
                "üìä <b>–ß—Ç–æ —è –¥–µ–ª–∞—é:</b>\n"
                "‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
                "‚Ä¢ –†–∞—Å—Å—á–∏—Ç—ã–≤–∞—é —Ü–µ–Ω–Ω–æ—Å—Ç—å —á–∞—Ç–∞\n"
                "‚Ä¢ –í—ã–¥–∞—é –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n\n"
                "üí° <b>–°–æ–≤–µ—Ç:</b> –ß–µ–º –∞–∫—Ç–∏–≤–Ω–µ–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏, —Ç–µ–º –±–æ–ª—å—à–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ!\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏."
            )
            
            await bot.send_message(chat.id, welcome_text, parse_mode="HTML")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —á–∞—Ç –∏ –≤—ã–¥–∞–µ–º –ø–µ—Ä–≤–æ–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ
            await analyze_and_reward_chat(chat.id, added_by_user.id)
            
            logger.info(f"–ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç {chat.id} ({chat_title}) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {added_by_user.id}")
        else:
            logger.error(f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞ {chat.id} –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —á–∞—Ç: {e}")

@dp.chat_member(ChatMemberUpdatedFilter(member_status_changed=MEMBER >> KICKED))
async def bot_removed_from_chat(event: ChatMemberUpdated):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –±–æ—Ç–∞ –∏–∑ —á–∞—Ç–∞"""
    try:
        chat = event.chat
        old_member = event.old_chat_member
        
        if old_member.user.id == bot.id:
            logger.info(f"–ë–æ—Ç —É–¥–∞–ª–µ–Ω –∏–∑ —á–∞—Ç–∞ {chat.id} ({chat.title})")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ —á–∞—Ç–∞: {e}")

@dp.message()
async def handle_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    try:
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤
        if message.from_user.is_bot:
            return
        
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if message.chat.type == "private":
            return
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç–µ
        await db.update_chat_activity(message.chat.id, message.from_user.id)
        
        # –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —á–∞—Ç (–∫–∞–∂–¥–æ–µ 10-–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        if message.message_id % 10 == 0:
            await analyze_and_reward_chat(message.chat.id)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def analyze_and_reward_chat(chat_id: int, added_by_user_id: int = None):
    """–ê–Ω–∞–ª–∏–∑ —á–∞—Ç–∞ –∏ –≤—ã–¥–∞—á–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–∞—Ç–∞
        stats = await db.get_chat_stats(chat_id)
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ü–µ–Ω–Ω–æ—Å—Ç—å —á–∞—Ç–∞
        chat_value = analyzer.calculate_chat_value(stats)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω–Ω–æ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        await db.update_chat_value(chat_id, chat_value)
        
        # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–∏–ª –±–æ—Ç–∞, –≤—ã–¥–∞–µ–º –µ–º—É –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ
        if added_by_user_id and chat_value > 0:
            reward_amount = chat_value * REWARD_COEFFICIENT
            
            # –í—ã–¥–∞–µ–º –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ
            success = await db.add_reward(added_by_user_id, chat_id, reward_amount)
            
            if success:
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–∏
                try:
                    await bot.send_message(
                        added_by_user_id,
                        f"üéâ <b>–ü–æ–ª—É—á–µ–Ω–æ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ!</b>\n\n"
                        f"üí∞ –°—É–º–º–∞: <b>{reward_amount:.2f}</b>\n"
                        f"üìä –¶–µ–Ω–Ω–æ—Å—Ç—å —á–∞—Ç–∞: <b>{chat_value:.2f}</b>\n"
                        f"üë• –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{stats['active_users']}</b>\n"
                        f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–π –∑–∞ —Å—É—Ç–∫–∏: <b>{stats['total_messages']}</b>\n\n"
                        f"–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞!",
                        parse_mode="HTML"
                    )
                except Exception as e:
                    logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {added_by_user_id}: {e}")
        
        logger.info(f"–ê–Ω–∞–ª–∏–∑ —á–∞—Ç–∞ {chat_id}: —Ü–µ–Ω–Ω–æ—Å—Ç—å {chat_value}, –∞–∫—Ç–∏–≤–Ω—ã—Ö {stats['active_users']}, —Å–æ–æ–±—â–µ–Ω–∏–π {stats['total_messages']}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —á–∞—Ç–∞ {chat_id}: {e}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
        if not BOT_TOKEN:
            logger.error("BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN")
            return
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await db.init_db()
        logger.info("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        await dp.start_polling(bot)
        
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(main())